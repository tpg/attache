(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{442:function(e,a,t){"use strict";t.r(a);var s=t(52),r=Object(s.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"release-management"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#release-management"}},[e._v("#")]),e._v(" Release Management")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://img.shields.io/github/v/release/tpg/attache?style=flat-square",alt:""}})]),e._v(" "),t("p",[e._v("Attaché provides a few tools for managing the releases on the server. You may have realized that during deployment, a new release is placed in the "),t("code",[e._v("releases")]),e._v(" directory leaving any previous releases completely intact. You can interact with these releases using the commands under the "),t("code",[e._v("attache releases")]),e._v(" namespace.")]),e._v(" "),t("h2",{attrs:{id:"getting-a-list-of-releases"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#getting-a-list-of-releases"}},[e._v("#")]),e._v(" Getting a list of releases")]),e._v(" "),t("p",[e._v("The first thing you'll probably want to do is see a list of releases currently sitting on your server. You can do so using the "),t("code",[e._v("releases:list")]),e._v(" command. Pass in a server name as the first argument if you need to, otherwise the default server config applies here too.")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("attache releases:list\n\n// or"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("..")]),e._v(".\n\nattache releases:list production\n")])])]),t("p",[e._v("This will return a table of releases, their IDs, the date of release, and if the release is active. Output should look a little like:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("---------------- --------------------- ------------\n ID               Release Date\n---------------- --------------------- ------------\n 20200317111232   17 March 2020 11:12\n 20200317115727   17 March 2020 11:57   <-- active\n---------------- --------------------- ------------\n")])])]),t("p",[e._v("There are two releases here and the most recent one is currently active.")]),e._v(" "),t("h2",{attrs:{id:"rollback"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#rollback"}},[e._v("#")]),e._v(" Rollback")]),e._v(" "),t("p",[e._v("We all like to think we're amazing at our jobs, but we all screw up every now and again. Sometimes, those mistakes make their way into production. It's not great and it's usually a scramble to get the previous version back online. Attaché provides a simple "),t("code",[e._v("releases:rollback")]),e._v(" command that will reactivate the previous release.")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("attache releases:rollback production\n")])])]),t("p",[e._v("If you had to run a "),t("code",[e._v("releases:list")]),e._v(" command after a rollback, you'll see that the previous release is now active.")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("---------------- --------------------- ------------\n ID               Release Date\n---------------- --------------------- ------------\n 20200317111232   17 March 2020 11:12   <-- active\n 20200317115727   17 March 2020 11:57\n---------------- --------------------- ------------\n")])])]),t("h2",{attrs:{id:"activate-a-specific-release"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#activate-a-specific-release"}},[e._v("#")]),e._v(" Activate a specific release")]),e._v(" "),t("p",[e._v("Similar to the "),t("code",[e._v("rollback")]),e._v(" command, you can specify a release ID to activate. Simply provide the ID of the release. If you need to specify a server name, put the name after the release ID:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("attache releases:activate 20200317115727 production\n")])])]),t("p",[e._v("In addition, if you ever need to simply activate the most recent release again, you can replace the release ID with the keyword "),t("code",[e._v("latest")]),e._v(".")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("attache releases:activate latest production\n")])])]),t("h2",{attrs:{id:"pruning-old-releases"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pruning-old-releases"}},[e._v("#")]),e._v(" Pruning old releases")]),e._v(" "),t("p",[e._v("Leaving releases to sit on the server indefinitely will quickly eat up valuable disk space. Each release could be massive. It's a good idea to keep the number of releases on the server to a bare minimum. Attaché's bare minimum is 2. You can quickly remove old releases from the server using the "),t("code",[e._v("releases:prune")]),e._v(" command. This will remove all the old releases except the most recent 2.")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("attache releases:prune\n")])])]),t("p",[e._v("Pruning is a desctructive action, so Attaché will confirm with you before deleting anything from the server. You can also specify the number of releases to prune by using the "),t("code",[e._v("--count")]),e._v(" option and giving it a number to remove. If you give a higher number than there are releases, Attaché will always leave the most recent two.")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("attache releases:prune production --count=5\n")])])]),t("p",[e._v("You can also prune releases automatically during deployment by using the "),t("code",[e._v("--prune")]),e._v(" option of the "),t("code",[e._v("deploy")]),e._v(" command.")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("attache deploy production --prune\n")])])]),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[e._v("Note")]),e._v(" "),t("p",[e._v("Note that you can never prune the current active release. Attaché will not allow a prune to complete if the active release would be removed.")])]),e._v(" "),t("h2",{attrs:{id:"up-and-down"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#up-and-down"}},[e._v("#")]),e._v(" Up and Down")]),e._v(" "),t("p",[e._v("Laravel's Artisan command line tool provides plenty of power and is an essential part of any Laravel application. Attaché provides access to just two of artisan's commands: "),t("code",[e._v("up")]),e._v(" and "),t("code",[e._v("down")]),e._v(". This is just for convenience sake and allows you to take the currently active release offline or online.")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Offline")]),e._v("\nattache releases:down production\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Online")]),e._v("\nattache releases:up production\n")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);